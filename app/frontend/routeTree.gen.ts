/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Sign_inRouteImport } from './routes/sign_in'
import { Route as GamedayRouteImport } from './routes/gameday'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SubredditsIndexRouteImport } from './routes/subreddits/index'
import { Route as Game_threadsIndexRouteImport } from './routes/game_threads/index'
import { Route as SubredditsSubredditIdRouteImport } from './routes/subreddits/$subredditId'
import { Route as Game_threadsThreadIdRouteImport } from './routes/game_threads/$threadId'
import { Route as SubredditsSubredditIdSettingsRouteImport } from './routes/subreddits/$subredditId/settings'
import { Route as SubredditsSubredditIdGame_threadsRouteImport } from './routes/subreddits/$subredditId/game_threads'
import { Route as Game_threadsThreadIdEditRouteImport } from './routes/game_threads/$threadId/edit'
import { Route as SubredditsSubredditIdGame_threadsNewRouteImport } from './routes/subreddits/$subredditId/game_threads/new'

const Sign_inRoute = Sign_inRouteImport.update({
  id: '/sign_in',
  path: '/sign_in',
  getParentRoute: () => rootRouteImport,
} as any)
const GamedayRoute = GamedayRouteImport.update({
  id: '/gameday',
  path: '/gameday',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SubredditsIndexRoute = SubredditsIndexRouteImport.update({
  id: '/subreddits/',
  path: '/subreddits/',
  getParentRoute: () => rootRouteImport,
} as any)
const Game_threadsIndexRoute = Game_threadsIndexRouteImport.update({
  id: '/game_threads/',
  path: '/game_threads/',
  getParentRoute: () => rootRouteImport,
} as any)
const SubredditsSubredditIdRoute = SubredditsSubredditIdRouteImport.update({
  id: '/subreddits/$subredditId',
  path: '/subreddits/$subredditId',
  getParentRoute: () => rootRouteImport,
} as any)
const Game_threadsThreadIdRoute = Game_threadsThreadIdRouteImport.update({
  id: '/game_threads/$threadId',
  path: '/game_threads/$threadId',
  getParentRoute: () => rootRouteImport,
} as any)
const SubredditsSubredditIdSettingsRoute =
  SubredditsSubredditIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => SubredditsSubredditIdRoute,
  } as any)
const SubredditsSubredditIdGame_threadsRoute =
  SubredditsSubredditIdGame_threadsRouteImport.update({
    id: '/game_threads',
    path: '/game_threads',
    getParentRoute: () => SubredditsSubredditIdRoute,
  } as any)
const Game_threadsThreadIdEditRoute =
  Game_threadsThreadIdEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => Game_threadsThreadIdRoute,
  } as any)
const SubredditsSubredditIdGame_threadsNewRoute =
  SubredditsSubredditIdGame_threadsNewRouteImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => SubredditsSubredditIdGame_threadsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/gameday': typeof GamedayRoute
  '/sign_in': typeof Sign_inRoute
  '/game_threads/$threadId': typeof Game_threadsThreadIdRouteWithChildren
  '/subreddits/$subredditId': typeof SubredditsSubredditIdRouteWithChildren
  '/game_threads': typeof Game_threadsIndexRoute
  '/subreddits': typeof SubredditsIndexRoute
  '/game_threads/$threadId/edit': typeof Game_threadsThreadIdEditRoute
  '/subreddits/$subredditId/game_threads': typeof SubredditsSubredditIdGame_threadsRouteWithChildren
  '/subreddits/$subredditId/settings': typeof SubredditsSubredditIdSettingsRoute
  '/subreddits/$subredditId/game_threads/new': typeof SubredditsSubredditIdGame_threadsNewRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/gameday': typeof GamedayRoute
  '/sign_in': typeof Sign_inRoute
  '/game_threads/$threadId': typeof Game_threadsThreadIdRouteWithChildren
  '/subreddits/$subredditId': typeof SubredditsSubredditIdRouteWithChildren
  '/game_threads': typeof Game_threadsIndexRoute
  '/subreddits': typeof SubredditsIndexRoute
  '/game_threads/$threadId/edit': typeof Game_threadsThreadIdEditRoute
  '/subreddits/$subredditId/game_threads': typeof SubredditsSubredditIdGame_threadsRouteWithChildren
  '/subreddits/$subredditId/settings': typeof SubredditsSubredditIdSettingsRoute
  '/subreddits/$subredditId/game_threads/new': typeof SubredditsSubredditIdGame_threadsNewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/gameday': typeof GamedayRoute
  '/sign_in': typeof Sign_inRoute
  '/game_threads/$threadId': typeof Game_threadsThreadIdRouteWithChildren
  '/subreddits/$subredditId': typeof SubredditsSubredditIdRouteWithChildren
  '/game_threads/': typeof Game_threadsIndexRoute
  '/subreddits/': typeof SubredditsIndexRoute
  '/game_threads/$threadId/edit': typeof Game_threadsThreadIdEditRoute
  '/subreddits/$subredditId/game_threads': typeof SubredditsSubredditIdGame_threadsRouteWithChildren
  '/subreddits/$subredditId/settings': typeof SubredditsSubredditIdSettingsRoute
  '/subreddits/$subredditId/game_threads/new': typeof SubredditsSubredditIdGame_threadsNewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/gameday'
    | '/sign_in'
    | '/game_threads/$threadId'
    | '/subreddits/$subredditId'
    | '/game_threads'
    | '/subreddits'
    | '/game_threads/$threadId/edit'
    | '/subreddits/$subredditId/game_threads'
    | '/subreddits/$subredditId/settings'
    | '/subreddits/$subredditId/game_threads/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/gameday'
    | '/sign_in'
    | '/game_threads/$threadId'
    | '/subreddits/$subredditId'
    | '/game_threads'
    | '/subreddits'
    | '/game_threads/$threadId/edit'
    | '/subreddits/$subredditId/game_threads'
    | '/subreddits/$subredditId/settings'
    | '/subreddits/$subredditId/game_threads/new'
  id:
    | '__root__'
    | '/'
    | '/gameday'
    | '/sign_in'
    | '/game_threads/$threadId'
    | '/subreddits/$subredditId'
    | '/game_threads/'
    | '/subreddits/'
    | '/game_threads/$threadId/edit'
    | '/subreddits/$subredditId/game_threads'
    | '/subreddits/$subredditId/settings'
    | '/subreddits/$subredditId/game_threads/new'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GamedayRoute: typeof GamedayRoute
  Sign_inRoute: typeof Sign_inRoute
  Game_threadsThreadIdRoute: typeof Game_threadsThreadIdRouteWithChildren
  SubredditsSubredditIdRoute: typeof SubredditsSubredditIdRouteWithChildren
  Game_threadsIndexRoute: typeof Game_threadsIndexRoute
  SubredditsIndexRoute: typeof SubredditsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign_in': {
      id: '/sign_in'
      path: '/sign_in'
      fullPath: '/sign_in'
      preLoaderRoute: typeof Sign_inRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gameday': {
      id: '/gameday'
      path: '/gameday'
      fullPath: '/gameday'
      preLoaderRoute: typeof GamedayRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/subreddits/': {
      id: '/subreddits/'
      path: '/subreddits'
      fullPath: '/subreddits'
      preLoaderRoute: typeof SubredditsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game_threads/': {
      id: '/game_threads/'
      path: '/game_threads'
      fullPath: '/game_threads'
      preLoaderRoute: typeof Game_threadsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/subreddits/$subredditId': {
      id: '/subreddits/$subredditId'
      path: '/subreddits/$subredditId'
      fullPath: '/subreddits/$subredditId'
      preLoaderRoute: typeof SubredditsSubredditIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game_threads/$threadId': {
      id: '/game_threads/$threadId'
      path: '/game_threads/$threadId'
      fullPath: '/game_threads/$threadId'
      preLoaderRoute: typeof Game_threadsThreadIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/subreddits/$subredditId/settings': {
      id: '/subreddits/$subredditId/settings'
      path: '/settings'
      fullPath: '/subreddits/$subredditId/settings'
      preLoaderRoute: typeof SubredditsSubredditIdSettingsRouteImport
      parentRoute: typeof SubredditsSubredditIdRoute
    }
    '/subreddits/$subredditId/game_threads': {
      id: '/subreddits/$subredditId/game_threads'
      path: '/game_threads'
      fullPath: '/subreddits/$subredditId/game_threads'
      preLoaderRoute: typeof SubredditsSubredditIdGame_threadsRouteImport
      parentRoute: typeof SubredditsSubredditIdRoute
    }
    '/game_threads/$threadId/edit': {
      id: '/game_threads/$threadId/edit'
      path: '/edit'
      fullPath: '/game_threads/$threadId/edit'
      preLoaderRoute: typeof Game_threadsThreadIdEditRouteImport
      parentRoute: typeof Game_threadsThreadIdRoute
    }
    '/subreddits/$subredditId/game_threads/new': {
      id: '/subreddits/$subredditId/game_threads/new'
      path: '/new'
      fullPath: '/subreddits/$subredditId/game_threads/new'
      preLoaderRoute: typeof SubredditsSubredditIdGame_threadsNewRouteImport
      parentRoute: typeof SubredditsSubredditIdGame_threadsRoute
    }
  }
}

interface Game_threadsThreadIdRouteChildren {
  Game_threadsThreadIdEditRoute: typeof Game_threadsThreadIdEditRoute
}

const Game_threadsThreadIdRouteChildren: Game_threadsThreadIdRouteChildren = {
  Game_threadsThreadIdEditRoute: Game_threadsThreadIdEditRoute,
}

const Game_threadsThreadIdRouteWithChildren =
  Game_threadsThreadIdRoute._addFileChildren(Game_threadsThreadIdRouteChildren)

interface SubredditsSubredditIdGame_threadsRouteChildren {
  SubredditsSubredditIdGame_threadsNewRoute: typeof SubredditsSubredditIdGame_threadsNewRoute
}

const SubredditsSubredditIdGame_threadsRouteChildren: SubredditsSubredditIdGame_threadsRouteChildren =
  {
    SubredditsSubredditIdGame_threadsNewRoute:
      SubredditsSubredditIdGame_threadsNewRoute,
  }

const SubredditsSubredditIdGame_threadsRouteWithChildren =
  SubredditsSubredditIdGame_threadsRoute._addFileChildren(
    SubredditsSubredditIdGame_threadsRouteChildren,
  )

interface SubredditsSubredditIdRouteChildren {
  SubredditsSubredditIdGame_threadsRoute: typeof SubredditsSubredditIdGame_threadsRouteWithChildren
  SubredditsSubredditIdSettingsRoute: typeof SubredditsSubredditIdSettingsRoute
}

const SubredditsSubredditIdRouteChildren: SubredditsSubredditIdRouteChildren = {
  SubredditsSubredditIdGame_threadsRoute:
    SubredditsSubredditIdGame_threadsRouteWithChildren,
  SubredditsSubredditIdSettingsRoute: SubredditsSubredditIdSettingsRoute,
}

const SubredditsSubredditIdRouteWithChildren =
  SubredditsSubredditIdRoute._addFileChildren(
    SubredditsSubredditIdRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GamedayRoute: GamedayRoute,
  Sign_inRoute: Sign_inRoute,
  Game_threadsThreadIdRoute: Game_threadsThreadIdRouteWithChildren,
  SubredditsSubredditIdRoute: SubredditsSubredditIdRouteWithChildren,
  Game_threadsIndexRoute: Game_threadsIndexRoute,
  SubredditsIndexRoute: SubredditsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
